/* In the case of ugly gulls singularity of central projection */

e_1:[1,0]$

e_2:[0,1]$

/* We assume that regular surface f is parabolic at the origin and the viewline is 3-rd order contact with regular surface. */

a30:0$
k1:0$


/* We denote the Taylor series of central projection by P(x1,x2). */

e1:[1,0,0]$

e2:[0,1,0]$

e3:[0,0,1]$

A:matrix([cos(s),0,-sin(s)],[0,1,0],[sin(s),0,cos(s)])$

B:trigsimp(invert(A))$

u:[B[1].e1,B[1].e2,B[1].e3]$

v:[B[2].e1,B[2].e2,B[2].e3]$

w:[B[3].e1,B[3].e2,B[3].e3]$

f0:f01*e1+f02*e2+f03*e3$

y:y1*e1+y2*e2+y3*e3$


f(x1,x2):=f0+x1*u+x2*v+A(x1,x2)*w$

A(x1,x2):=k1*x1*x2+(k2/2)*x2^2
+(a30/6)*x1^3+(a21/2)*x1^2*x2+(a12/2)*x1*x2^2+(a03/6)*x2^3
+(a40/24)*x1^4+(a31/6)*x1^3*x2+(a22/4)*x1^2*x2^2+(a13/6)*x1*x2^3+(a04/24)*x2^4
+(a50/120)*x1^5+(a41/24)*x1^4*x2+(a32/12)*x1^3*x2^2+(a23/12)*x1^2*x2^3+(a14/24)*x1*x2^4+(a05/120)*x2^5
+(a60/720)*x1^6+(a51/120)*x1^5*x2+(a42/48)*x1^4*x2^2+(a33/36)*x1^3*x2^3+(a24/48)*x1^2*x2^4+(a15/120)*x1*x2^5+(a06/720)*x2^6
+(a70/5040)*x1^7+(a61/720)*x1^6*x2+(a52/240)*x1^5*x2^2+(a43/144)*x1^4*x2^3+(a34/144)*x1^3*x2^4+(a25/240)*x1^2*x2^5+(a16/720)*x1*x2^6+(a07/5040)*x2^7
+(a80/40320)*x1^8+(a71/5040)*x1^7*x2+(a62/1440)*x1^6*x2^2+(a53/720)*x1^5*x2^3+(a44/576)*x1^4*x2^4+(a35/720)*x1^3*x2^5+(a26/1440)*x1^2*x2^6+(a17/5040)*x1*x2^7+(a08/40320)*x2^8$

t(x1,x2):=-y.e3/(e3.f(x1,x2)-y.e3)$

Pi(x1,x2):=[t(x1,x2)*e1.f(x1,x2)+(1-t(x1,x2))*y.e1,t(x1,x2)*e2.f(x1,x2)+(1-t(x1,x2))*y.e2]$
define(P(x1,x2),Pi(x1,x2)-Pi(0,0))$

define(Py1(x1,x2),diff(P(x1,x2),y1,1))$

define(Py1t(t),taylor(Py1(t*x1,t*x2),t,0,7))$

define(Py2(x1,x2),diff(P(x1,x2),y2,1))$

define(Py2t(t),taylor(Py2(t*x1,t*x2),t,0,7))$

define(Py3(x1,x2),diff(P(x1,x2),y3,1))$

define(Py3t(t),taylor(Py3(t*x1,t*x2),t,0,7))$

y1:p1*cos(s)+f01$
y2:f02$
y3:p1*sin(s)+f03$


/* The following code is preparation to define elements of the tangent space of P(x1,x2). */

define(d1P(x1,x2),diff(P(x1,x2),x1,1))$

define(d2P(x1,x2),diff(P(x1,x2),x2,1))$

define(d1Pij(x1,x2,i,j),x1^(i)*x2^(j)*d1P(x1,x2))$

define(d1Pijt(t,i,j),taylor(d1Pij(t*x1,t*x2,i,j),t,0,7))$

define(d2Pij(x1,x2,i,j),x1^(i)*x2^(j)*d2P(x1,x2))$

define(d2Pijt(t,i,j),taylor(d2Pij(t*x1,t*x2,i,j),t,0,7))$

define(P1mP2n(x1,x2,m,n),((P(x1,x2)[1])^(m))*((P(x1,x2)[2])^(n)))$

define(P1mP2nt(t,m,n),taylor(P1mP2n(t*x1,t*x2,m,n),t,0,7))$

factor(coeff(P1mP2nt(t,0,4),t,5))*e_1;


/* We define elments of tangent space for target of P(x1,x2) as the following.
For Tij, "i" is number of multiplying P[1]„ÄÅ"j" is number of multiplying P[2]. */

T10e1:matrix([]);
for k:1 while (k<=7) do
for l:0 while (l<=k) do
T10e1:addcol(T10e1,[factor(coeff(coeff(coeff(P1mP2nt(t,1,0),t,k),x1,k-l),x2,l)),0]);

T10e2:matrix([]);
for k:1 while (k<=7) do
for l:0 while (l<=k) do
T10e2:addcol(T10e2,[0,factor(coeff(coeff(coeff(P1mP2nt(t,1,0),t,k),x1,k-l),x2,l))]);

T01e1:matrix([]);
for k:1 while (k<=7) do
for l:0 while (l<=k) do
T01e1:addcol(T01e1,[factor(coeff(coeff(coeff(P1mP2nt(t,0,1),t,k),x1,k-l),x2,l)),0]);

T01e2:matrix([]);
for k:1 while (k<=7) do
for l:0 while (l<=k) do
T01e2:addcol(T01e2,[0,factor(coeff(coeff(coeff(P1mP2nt(t,0,1),t,k),x1,k-l),x2,l))]);

T11e1:matrix([]);
for k:1 while (k<=7) do
for l:0 while (l<=k) do
T11e1:addcol(T11e1,[factor(coeff(coeff(coeff(P1mP2nt(t,1,1),t,k),x1,k-l),x2,l)),0]);

T02e1:matrix([]);
for k:1 while (k<=7) do
for l:0 while (l<=k) do
T02e1:addcol(T02e1,[factor(coeff(coeff(coeff(P1mP2nt(t,0,2),t,k),x1,k-l),x2,l)),0]);

T02e2:matrix([]);
for k:1 while (k<=7) do
for l:0 while (l<=k) do
T02e2:addcol(T02e2,[0,factor(coeff(coeff(coeff(P1mP2nt(t,0,2),t,k),x1,k-l),x2,l))]);

T03e1:matrix([]);
for k:1 while (k<=7) do
for l:0 while (l<=k) do
T03e1:addcol(T03e1,[factor(coeff(coeff(coeff(P1mP2nt(t,0,3),t,k),x1,k-l),x2,l)),0]);

/* We define elments of tangent space for source of P(x1,x2) as follows: */

d1P00:matrix([]);
for k:1 while (k<=7) do
for l:0 while (l<=k) do
d1P00:addcol(d1P00,[factor(coeff(coeff(coeff(d1Pijt(t,0,0),t,k),x1,k-l),x2,l)[1]),factor(coeff(coeff(coeff(d1Pijt(t,0,0),t,k),x1,k-l),x2,l)[2])]);

d2P00:matrix([]);
for k:1 while (k<=7) do
for l:0 while (l<=k) do
d2P00:addcol(d2P00,[factor(coeff(coeff(coeff(d2Pijt(t,0,0),t,k),x1,k-l),x2,l)[1]),factor(coeff(coeff(coeff(d2Pijt(t,0,0),t,k),x1,k-l),x2,l)[2])]);


d1P10:matrix([]);
for k:1 while (k<=7) do
for l:0 while (l<=k) do
d1P10:addcol(d1P10,[factor(coeff(coeff(coeff(d1Pijt(t,1,0),t,k),x1,k-l),x2,l)[1]),factor(coeff(coeff(coeff(d1Pijt(t,1,0),t,k),x1,k-l),x2,l)[2])]);

d1P01:matrix([]);
for k:1 while (k<=7) do
for l:0 while (l<=k) do
d1P01:addcol(d1P01,[factor(coeff(coeff(coeff(d1Pijt(t,0,1),t,k),x1,k-l),x2,l)[1]),factor(coeff(coeff(coeff(d1Pijt(t,0,1),t,k),x1,k-l),x2,l)[2])]);

d2P10:matrix([]);
for k:1 while (k<=7) do
for l:0 while (l<=k) do
d2P10:addcol(d2P10,[factor(coeff(coeff(coeff(d2Pijt(t,1,0),t,k),x1,k-l),x2,l)[1]),factor(coeff(coeff(coeff(d2Pijt(t,1,0),t,k),x1,k-l),x2,l)[2])]);

d2P01:matrix([]);
for k:1 while (k<=7) do
for l:0 while (l<=k) do
d2P01:addcol(d2P01,[factor(coeff(coeff(coeff(d2Pijt(t,0,1),t,k),x1,k-l),x2,l)[1]),factor(coeff(coeff(coeff(d2Pijt(t,0,1),t,k),x1,k-l),x2,l)[2])]);


d1P20:matrix([]);
for k:1 while (k<=7) do
for l:0 while (l<=k) do
d1P20:addcol(d1P20,[factor(coeff(coeff(coeff(d1Pijt(t,2,0),t,k),x1,k-l),x2,l)[1]),factor(coeff(coeff(coeff(d1Pijt(t,2,0),t,k),x1,k-l),x2,l)[2])]);

d1P11:matrix([]);
for k:1 while (k<=7) do
for l:0 while (l<=k) do
d1P11:addcol(d1P11,[factor(coeff(coeff(coeff(d1Pijt(t,1,1),t,k),x1,k-l),x2,l)[1]),factor(coeff(coeff(coeff(d1Pijt(t,1,1),t,k),x1,k-l),x2,l)[2])]);

d1P02:matrix([]);
for k:1 while (k<=7) do
for l:0 while (l<=k) do
d1P02:addcol(d1P02,[factor(coeff(coeff(coeff(d1Pijt(t,0,2),t,k),x1,k-l),x2,l)[1]),factor(coeff(coeff(coeff(d1Pijt(t,0,2),t,k),x1,k-l),x2,l)[2])]);

d2P20:matrix([]);
for k:1 while (k<=7) do
for l:0 while (l<=k) do
d2P20:addcol(d2P20,[factor(coeff(coeff(coeff(d2Pijt(t,2,0),t,k),x1,k-l),x2,l)[1]),factor(coeff(coeff(coeff(d2Pijt(t,2,0),t,k),x1,k-l),x2,l)[2])]);

d2P11:matrix([]);
for k:1 while (k<=7) do
for l:0 while (l<=k) do
d2P11:addcol(d2P11,[factor(coeff(coeff(coeff(d2Pijt(t,1,1),t,k),x1,k-l),x2,l)[1]),factor(coeff(coeff(coeff(d2Pijt(t,1,1),t,k),x1,k-l),x2,l)[2])]);

d2P02:matrix([]);
for k:1 while (k<=7) do
for l:0 while (l<=k) do
d2P02:addcol(d2P02,[factor(coeff(coeff(coeff(d2Pijt(t,0,2),t,k),x1,k-l),x2,l)[1]),factor(coeff(coeff(coeff(d2Pijt(t,0,2),t,k),x1,k-l),x2,l)[2])]);


d1P30:matrix([]);
for k:1 while (k<=7) do
for l:0 while (l<=k) do
d1P30:addcol(d1P30,[factor(coeff(coeff(coeff(d1Pijt(t,3,0),t,k),x1,k-l),x2,l)[1]),factor(coeff(coeff(coeff(d1Pijt(t,3,0),t,k),x1,k-l),x2,l)[2])]);

d1P21:matrix([]);
for k:1 while (k<=7) do
for l:0 while (l<=k) do
d1P21:addcol(d1P21,[factor(coeff(coeff(coeff(d1Pijt(t,2,1),t,k),x1,k-l),x2,l)[1]),factor(coeff(coeff(coeff(d1Pijt(t,2,1),t,k),x1,k-l),x2,l)[2])]);

d2P30:matrix([]);
for k:1 while (k<=7) do
for l:0 while (l<=k) do
d2P30:addcol(d2P30,[factor(coeff(coeff(coeff(d2Pijt(t,3,0),t,k),x1,k-l),x2,l)[1]),factor(coeff(coeff(coeff(d2Pijt(t,3,0),t,k),x1,k-l),x2,l)[2])]);

d2P21:matrix([]);
for k:1 while (k<=7) do
for l:0 while (l<=k) do
d2P21:addcol(d2P21,[factor(coeff(coeff(coeff(d2Pijt(t,2,1),t,k),x1,k-l),x2,l)[1]),factor(coeff(coeff(coeff(d2Pijt(t,2,1),t,k),x1,k-l),x2,l)[2])]);

d2P12:matrix([]);
for k:1 while (k<=7) do
for l:0 while (l<=k) do
d2P12:addcol(d2P12,[factor(coeff(coeff(coeff(d2Pijt(t,1,2),t,k),x1,k-l),x2,l)[1]),factor(coeff(coeff(coeff(d2Pijt(t,1,2),t,k),x1,k-l),x2,l)[2])]);

d1P40:matrix([]);
for k:1 while (k<=7) do
for l:0 while (l<=k) do
d1P40:addcol(d1P40,[factor(coeff(coeff(coeff(d1Pijt(t,4,0),t,k),x1,k-l),x2,l)[1]),factor(coeff(coeff(coeff(d1Pijt(t,4,0),t,k),x1,k-l),x2,l)[2])]);

d2P40:matrix([]);
for k:1 while (k<=7) do
for l:0 while (l<=k) do
d2P40:addcol(d2P40,[factor(coeff(coeff(coeff(d2Pijt(t,4,0),t,k),x1,k-l),x2,l)[1]),factor(coeff(coeff(coeff(d2Pijt(t,4,0),t,k),x1,k-l),x2,l)[2])]);

d2P31:matrix([]);
for k:1 while (k<=7) do
for l:0 while (l<=k) do
d2P31:addcol(d2P31,[factor(coeff(coeff(coeff(d2Pijt(t,3,1),t,k),x1,k-l),x2,l)[1]),factor(coeff(coeff(coeff(d2Pijt(t,3,1),t,k),x1,k-l),x2,l)[2])]);

d2P50:matrix([]);
for k:1 while (k<=7) do
for l:0 while (l<=k) do
d2P50:addcol(d2P50,[factor(coeff(coeff(coeff(d2Pijt(t,5,0),t,k),x1,k-l),x2,l)[1]),factor(coeff(coeff(coeff(d2Pijt(t,5,0),t,k),x1,k-l),x2,l)[2])]);

/* differential of P(x1,x2) for viewpont y is written as follows: */

Py1:matrix([]);
for k:1 while (k<=7) do
for l:0 while (l<=k) do
Py1:addcol(Py1,[factor(coeff(coeff(coeff(Py1t(t),t,k),x1,k-l),x2,l))[1],factor(coeff(coeff(coeff(Py1t(t),t,k),x1,k-l),x2,l))[2]]);

Py2:matrix([]);
for k:1 while (k<=7) do
for l:0 while (l<=k) do
Py2:addcol(Py2,[factor(coeff(coeff(coeff(Py2t(t),t,k),x1,k-l),x2,l))[1],factor(coeff(coeff(coeff(Py2t(t),t,k),x1,k-l),x2,l))[2]]);

Py3:matrix([]);
for k:1 while (k<=7) do
for l:0 while (l<=k) do
Py3:addcol(Py3,[factor(coeff(coeff(coeff(Py3t(t),t,k),x1,k-l),x2,l))[1],factor(coeff(coeff(coeff(Py3t(t),t,k),x1,k-l),x2,l))[2]]);

/* We prove the monomials represented by the matrices D_1 and D_2 which are expressed by the table in page 25-26 on paper. 
The following codes are Gauss elimination method for the matrices D defined as follow. */

M:addrow(Py1,Py2,Py3,
T10e1,T10e2,
    T01e1,T01e2,T11e1,T02e1,T03e1,
d1P00,d2P00,d1P10,d1P01,d2P10,d2P01,d1P20,d1P11,d1P02,d2P20,d2P11,d2P02,
d1P21,d2P30,d2P21,d2P12,d1P40,d2P40,d2P31,d2P50
)$

M1:factor(trigsimp(submatrix(M,
18,
24,26,27,28,
32,34,35,36,37,38,39,40,
42,44,45,46,47,48,49,50,51,52,53,54,
56,57,58,59,60,61,62,63,64,65,66,67,68,69,70)))$

D:matrix(M1[1],M1[2],M1[3],M1[4],M1[5],
    M1[6],M1[7],M1[8],M1[9],M1[10],
    M1[11],M1[12],M1[13],M1[14],M1[15],
    M1[16],M1[17],M1[18],M1[19],M1[20],
    M1[21],M1[22],M1[23],M1[24],M1[25],
    M1[26],M1[27],M1[28],M1[29],M1[30]
)$

c:(p1*sin(s)+f03)/(p1*sin(s))$

D1:factor(trigsimp(
matrix(M1[1],M1[2],M1[3]+M1[1]/tan(s),M1[4],M1[5],
    M1[6],M1[7],M1[8],M1[9],M1[10],
    M1[11],M1[12]+M1[2]+k2*M1[6]/(sin(s)),M1[13],M1[14],M1[15]+p1*M1[2],
    M1[16],M1[17],M1[18],M1[19],M1[20],
    M1[21],M1[22],M1[23],M1[24],M1[25],
    M1[26],M1[27],M1[28],M1[29],M1[30]
)))$

D2:submatrix(1,2,6,12,20,24,D1,1,2,3,5,6,12)$

DD2:factor(trigsimp(
matrix(D2[1],D2[2],D2[3],D2[4],D2[5],
    D2[6],D2[7],D2[8],D2[9],D2[10],
    D2[11],D2[12],D2[13],D2[14],D2[15],
    D2[16],D2[17],D2[18],D2[19],D2[20],
    D2[21],D2[22],D2[23],D2[24]
    )))$

D3:submatrix(8,11,DD2,2,6)$

DD3:factor(trigsimp(
matrix(D3[1],D3[2],D3[3],D3[4],D3[5],
    D3[6],D3[7],D3[8],D3[9],D3[10],
    D3[11],D3[12],D3[13],D3[14],D3[15],
    D3[16],D3[17],D3[18],D3[19],D3[20],
    D3[21],D3[22]
    )))$

DD3:factor(trigsimp(
matrix(D3[1]+D3[2]*f03/(y3*p1*sin(s))+D3[4]*f03/(y3*p1*sin(s))+D3[14]/(p1^2*sin(s)),
            D3[2]-D3[10]/2+D3[4]/2,
            D3[3]+D3[9]*k2*p1/(2*sin(s))+D3[20]*a40/(24*sin(s))+D3[22]*a50/(120*sin(s)),
            D3[4],D3[5],
    D3[6],D3[7],D3[8]-D3[14]/p1,D3[9],D3[10]-D3[4]+D3[6]*k2*p1/(y3),
    D3[11],D3[12],D3[13],D3[14],D3[15]-D3[9]*p1,
    D3[16],D3[17],D3[18],D3[19],D3[20]-D3[22]/p1,
    D3[21],D3[22]
    )))$

D4:submatrix(4,6,9,14,20,22,DD3,1,2,3,4,11,17)$

DD4:factor(trigsimp(
matrix(D4[1],D4[2],D4[3],D4[4],D4[5],
    D4[6],D4[7],D4[8],D4[9],D4[10],
    D4[11],D4[12],D4[13],D4[14],D4[15],
    D4[16]
    )))$

DD4:factor(trigsimp(
matrix(D4[1]+D4[8]/(4*p1^2*sin(s)),D4[2],D4[3],D4[4],D4[5],
    D4[6]-4*D4[2]-D4[8]*(a50*p1+5*a40)/(20*a40*p1),D4[7],D4[8],D4[9],D4[10],
    D4[11],D4[12],D4[13],D4[14],D4[15],
    D4[16]
    )))$

D5:submatrix(2,7,8,DD4,1,6,11)$

detD5:factor(newdet(D5))$

detD:factor(subst(((3*a21^2*a50+5*a12*a40^2-10*a21*a31*a40)*p1+15*a21^2*a40)/(5*a40^2),
            k2,detD5));

/*
Since the determinant of the matrix D5 written as detD does not vanish, 
we complete the proof of the regularity. 
*/
